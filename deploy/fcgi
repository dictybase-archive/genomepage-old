#!/bin/sh

# install perl modules for fcgi deployment
# of web application.

# gets the project folder as the param
install_dependencies() {
	 cd $1
   carton install
}

after_install_dependencies() {
   echo "------> Installing plack and dependencies for fcgi deployment"
   cd $1
   carton install Plack FCGI FCGI::ProcManager FCGI::Engine

}

before_install_dependencies() {

  carton install Devel::Loaded
	
	local dbic=0.08127
	local modware=0.0012
	local mojolicious=1.21
	local bundle=0.005

	local dbic_version=`__check_perl_module_version DBIx::Class`
	if [ `echo "$dbic_version < $dbic" | bc` -eq 1 ];then
     echo "------> Installing DBIx::Class 0.08127"
     carton install http://cpan.metacpan.org/authors/id/A/AB/ABRAXXA/DBIx-Class-0.08127.tar.gz
   fi

	local bundle_version=`__check_perl_module_version Mojolicious::Plugin::Bundle`
	if [ `echo "$bundle_version < $bundle" | bc` -eq 1 ];then
     echo "------> Installing Mojolicious::Plugin::Bundle 0.005"
     local url=https://github.com/downloads/dictyBase/Mojolicious-PluginBundle/Mojolicious-Plugin-Bundle-0.005.tar.gz
     curl -o mojolicious-plugin-bundle.tar.gz -s -k -L $url \
          && carton install mojolicious-plugin-bundle.tar.gz && rm mojolicious-plugin-bundle.tar.gz
   fi

	local modware_version=`__check_perl_module_version Modware`
	if [ `echo "$modware_version < $modware" | bc` -eq 1 ];then
     echo " -----> Installing modware"
     curl -o modware.tar.gz -s -k -L https://github.com/dictyBase/Modware/tarball/develop \
                          && carton install modware.tar.gz && rm modware.tar.gz
  fi

	local mojo_version=`__check_perl_module_version Mojolicious`
	if [ `echo "$mojo_version < $mojolicious" | bc` -eq 1 ];then
     echo " ----> Installing mojolicious 1.21"
     curl -o mojolicious.tar.gz -s -k -L https://github.com/kraih/mojo/tarball/v1.21 \
                        && carton install mojolicious.tar.gz && rm mojolicious.tar.gz
  fi

}

create_daemontools_runfile(){

  local PROJECT=$1
  local RUN_FILE=$2
  local LOCAL_LIB=$3
  local APP_DIR=$4

  echo -e "#!/bin/sh\nexec 2>1&\n" > $RUN_FILE
  echo "export HOME=$HOME" >> $RUN_FILE
  echo -e "cd $APP_DIR\n" >> $RUN_FILE
  echo "source ${PERLBREW_ROOT}/etc/bashrc" >> $RUN_FILE
  echo "perlbrew use $LOCAL_LIB" >> $RUN_FILE
  echo  "export MOJO_MODE=production" >> $RUN_FILE
  echo  "exec setuidgid $USER carton exec -Ilib  -- plackup -E production -r -R template -s FCGI --nproc 4 -l /tmp/${PROJECT}.socket script/$PROJECT" >> $RUN_FILE
}

before_create_daemontools_runfile() {
   return
}

after_create_daemontools_runfile() {

  local PROJECT=$1
  local RUN_FILE=$2
  local LOCAL_LIB=$3
  local APP_DIR=$4
  local SERVICE=${APP_DIR}/service
  local APP_SERVICE=${SERVICE}/${PROJECT}runner
  local RUN_FILE=${APP_SERVICE}/run

	! [ -d $APP_SERVICE ] && mkdir -p $APP_SERVICE

	if  [ ! -e $RUN_FILE ];then 
		cd $APP_DIR
		chmod 1755 $APP_SERVICE
		chmod 755 $RUN_FILE
		ln -s $APP_SERVICE /service/${PROJECT}
	fi
}


__check_perl_module_version() {
	local module=$1
	local perl=`which perl`
	local value=0.0

	$perl -Ilocal/lib/perl5 -M$module -e '' > /dev/null 2>&1
	if [ $? -eq 0 ]; then
		local version=`carton exec pmvers $module`
		echo $version
  else
     echo $value
  fi
}
